<?php

namespace rootio\Bundle\vmailmeBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Symfony\Component\Security\Core\User\UserProviderInterface;
use Symfony\Component\Security\Core\User\UserInterface;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository implements UserProviderInterface {

    public function loadUserByUsername($usernameOrEmail) {
        $qb = $this->createQueryBuilder('u');
        $expr = $qb->expr();
        $qb->select('u');
        $qb->where(
            $expr->orx(
                $expr->eq(
                    'u.username',
                    ':usernameOrEmail'
                ),
                $expr->eq(
                    'u.email',
                    ':usernameOrEmail'
                )
            )
        );
        $qb->setParameter(
            'usernameOrEmail',
            $usernameOrEmail
        );
        $qry = $qb->getQuery();

        return $qry->getOneOrNullResult();
    }

    public function isUsernameOrEmailExist($usernameOrEmail) {
        $qb = $this->createQueryBuilder('u');
        $expr = $qb->expr();
        $qb->select(
            $expr->count('u.id')
        );
        $qb->where(
            $expr->orx(
                $expr->eq(
                    'u.username',
                    ':usernameOrEmail'
                ),
                $expr->eq(
                    'u.email',
                    ':usernameOrEmail'
                )
            )
        );
        $qb->setParameter(
            'usernameOrEmail',
            $usernameOrEmail
        );
        $qry = $qb->getQuery();

        return ($qry->getSingleScalarResult() > 0);
    }

    public function refreshUser(UserInterface $user) {
        return $this->loadUserByUsername($user->getUsername());
    }

    public function supportsClass($class) {
        return $class === 'rootio\Bundle\vmailmeBundle\Entity\User';
    }
}
